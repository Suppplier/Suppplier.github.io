[ { "title": "42서울 피신 일정 중단", "url": "/posts/01-copy/", "categories": "Blogging, daily life, 42Seoul", "tags": "life", "date": "2021-03-01 14:20:00 +0900", "snippet": "마지막 포스팅으로부터 무려 2주나 됬다.원래 매일매일 포스팅을 하고싶었는데, 쓸 말들을 적다보면 딱히 할 말이 없는 날도 있었고나보다 오래 하는 사람들도 많겠지만.. 아침 7시 반에 일어나서 밤 12시 반에 귀가하는 생활은 생각보다 정말 지친다.단순 코딩만 하는게 아니라 계속 돌아다니면서 다른 사람을 평가하거나 평가받고.. 이런 과정은 체력을 굉장히 많이 소모했다. 격일제가 아니었다면 컨디션 조절에 엄청난 난항을 겪었으리라아무튼 그런 이유 때문에 대충 적어놓은 내용들을 나중에 한번에 작성하려고 했다.3일 전.. 금요일은 2주차..." }, { "title": "피신 1일차 (2/15)", "url": "/posts/01/", "categories": "Blogging, daily life, 42Seoul", "tags": "life", "date": "2021-02-14 14:20:00 +0900", "snippet": "기념비적인 피신 첫 날이다. 7시 반에 일어나서 샤워를 하고 짐을 챙겨서 버스를 탔다. 최근에 이렇게 일찍 일어난 적이 없었다. 부끄러울 따름..버스를 도착하니 9시 20 정도였다. 4층으로 올라가서 카운터에서 피신 등록을 하러 왔다고 하니 온도 체크를 하고 옆에 앉아서 잠깐 기다리라고 했다. 내 앞에는 한 7명정도 있었고 나는 8번째였다.조금 기다리다 보니 5층에 있는 10 클러스터로 이동하라고 했다. 9시 50분쯤 되니 클러스터가 가득 찼고, 간단한 오리엔테이션이 진행됬다.대부분은 집합 전에 배포되었던 노션에 있는 내용들이..." }, { "title": "요즘 포스팅이 뜸했던 이유", "url": "/posts/01/", "categories": "Blogging, daily life, 42Seoul", "tags": "life", "date": "2021-02-14 14:20:00 +0900", "snippet": "마지막 포스팅이 무려 8일 전.. 그렇다고 아예 놀던건 아니다.작년에 온라인 테스트를 통과하여 자격을 얻었던 42Seoul 4기 1차 La Piscine 교육을 당장 내일부터 듣게 되었다.온라인 테스트 외에는 별도의 시험이나 자소서를 제출하는 것도 없었고, 단순히 선착순으로 신청을 하는 방식이었기에 그냥 운이 좋았다고밖에 못하겠다.온라인 테스트도 코딩테스트 같은 것이 아닌 약간의 단기 기억력, 논리 및 사고를 요구하는 일종의 게임같은 것으로 진행이 되었었고 합격 컷도 그리 높지 않다고 한다.온라인 체크 미팅은 한번은 실패했지만..." }, { "title": "[BlackCoffee] Week3 - TodoList for Team 6", "url": "/posts/bc_week3_06/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-02-05 20:00:00 +0900", "snippet": "Week3 - TodoList for Team 614. todolist/updateItem.js11-1. initialize &amp;amp; initUpdateTodoListimport { API, MINIMUN_INPUT_LENGTH } from &quot;../api.js&quot;;import { getTeamList, $todoApps, teamId } from &quot;./showTodoList.js&quot;;export const initUpdateTodoList = () =&amp;gt; { $todoApp..." }, { "title": "[BlackCoffee] Week3 - TodoList for Team 5", "url": "/posts/bc_week3_05/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-02-05 19:00:00 +0900", "snippet": "Week3 - TodoList for Team 511. todolist/updateItem.js11-1. initialize &amp;amp; initUpdateTodoListimport { API, MINIMUN_INPUT_LENGTH } from &quot;../api.js&quot;;import { getTeamList, $todoApps, teamId } from &quot;./showTodoList.js&quot;;export const initUpdateTodoList = () =&amp;gt; { $todoApp..." }, { "title": "[BlackCoffee] Week3 - TodoList for Team 4", "url": "/posts/bc_week3_04/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-02-05 18:30:00 +0900", "snippet": "Week3 - TodoList for Team 48. todolist/addMember.js8-1. initialize &amp;amp; initAddMemberimport { API, MINIMUN_INPUT_LENGTH } from &quot;../api.js&quot;;import { getTeamList, teamId } from &quot;./showTodoList.js&quot;;const $addUserButton = document.querySelector(&quot;#add-user-button&quot;);e..." }, { "title": "[BlackCoffee] Week3 - TodoList for Team 3", "url": "/posts/bc_week3_03/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-02-05 18:00:00 +0900", "snippet": "Week3 - TodoList for Team 36. todolist/showTodoList.js6-1. initialize &amp;amp; getTeamListimport { API } from &quot;../api.js&quot;;import { changeByHash } from &quot;./controlTodoButton.js&quot;;export const $todoApps = document.querySelector(&quot;.todoapp-list-container&quot;);export const te..." }, { "title": "[BlackCoffee] Week3 - TodoList for Team 2", "url": "/posts/bc_week3_02/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-02-05 17:30:00 +0900", "snippet": "Week3 - TodoList for Team 22. teamlist/addTeam.js2-1. initialize &amp;amp; initAddTeamimport { API, MINIMUN_INPUT_LENGTH } from &quot;../api.js&quot;;import { getAllTeams } from &quot;./showTeamList.js&quot;;const $addTeamButton = document.querySelector(&quot;#add-team-button&quot;);export const ..." }, { "title": "[BlackCoffee] Week3 - TodoList for Team 1", "url": "/posts/bc_week3_01/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-02-05 17:00:00 +0900", "snippet": "Week3 - TodoList for Team 13주차는 2주차와 비슷하게 Ajax 를 이용하여 TodoList 를 구성하는 것 이지만, 이번 과제는 좀 더 복잡하다. 이전에는 개개인에 대한 TodoList 를 구현했는데, 이번에는 팀 단위로 멤버를 삽입하고, 한 페이지에서 한 팀의 모든 멤버들의 TodoList 를 보여주어야 한다.다뤄야 하는 html 파일이 2개로 늘어났고, api 도 세부적으로 나뉘었기 때문에 이전보다 모듈화에 좀 더 많은 신경을 써야했다.요구사항Team 팀 추가하기 팀 리스트 불러와서 화면에 보여주기..." }, { "title": "[Javascript] Call &amp; Apply &amp; Bind", "url": "/posts/callapplybind/", "categories": "Study, Javascript", "tags": "Javascript, FrontEnd, dictionary", "date": "2021-02-01 15:00:00 +0900", "snippet": "함수를 호출하는 방법함수를 호출하는 방법은 다음과 같은 방법들이 있다. function printLog(a,b,c){ console.log(a + b + c); } printLog(1,2,3); printLog.call(null, 1,2,3); printLog.apply(null, [1,2,3]); let a = printLog.bind(null); a(1,2,3);위 방법들은 서로 다른 호출 방식을 사용하지만 같은 결과를 보여준다.단순히 함수 명 뒤에 () 을 붙여 인자를 넘겨주는 방법이 일반적이지만, 다른 방법들은 어..." }, { "title": "[Javascript] Some &amp; Every", "url": "/posts/someevery/", "categories": "Study, Javascript", "tags": "Javascript, FrontEnd, dictionary", "date": "2021-01-31 18:00:00 +0900", "snippet": "somefrom 메서드는 배열 안의 어떤 요소라도 주어진 판별 함수를 통과하는지 테스트한다.빈 배열에서 호출하면 무조건 false 를 반환한다.구문 arr.some(callback[, thisArg]) callback : 각 요소를 시험할 함수 currentValeu : 처리할 현재 요소 index : 처리할 현재 요소의 인덱스 array : some 을 호출한 배열 예시let res = [2, 5, 8, 1, 4].some(function (item) { return item ..." }, { "title": "[Javascript] From", "url": "/posts/from/", "categories": "Study, Javascript", "tags": "Javascript, FrontEnd, dictionary", "date": "2021-01-31 18:00:00 +0900", "snippet": "fromfrom 메서드는 유사 배열 객체나 반복 가능한 객체를 얕게 복사하여 새로운 배열 객체를 만든다.구문 Array.from(arrayLike[, mapFn[, thisArg]]) arrayLike : 배열로 변환하고자 하는 유사 배열 객체나 반복 가능한 객체 mapFn : 배열의 모든 요소에 대해 호출할 맵핑 함수예시const arr1 = Array.from(&#39;Hello&#39;);console.log(arr1); // [&#39;H&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39..." }, { "title": "[Programmers][Javascript] 폰켓몬", "url": "/posts/prog_1845/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-29 18:30:00 +0900", "snippet": "Programmers - 폰켓몬문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/1845문제당신은 폰켓몬을 잡기 위한 오랜 여행 끝에, 홍 박사님의 연구실에 도착했습니다. 홍 박사님은 당신에게 자신의 연구실에 있는 총 N 마리의 폰켓몬 중에서 N/2마리를 가져가도 좋다고 했습니다.홍 박사님 연구실의 폰켓몬은 종류에 따라 번호를 붙여 구분합니다. 따라서 같은 종류의 폰켓몬은 같은 번호를 가지고 있습니다. 예를 들어 연구실에 총 4마리의 폰켓몬이 있고, 각 폰켓몬의 종류 번호..." }, { "title": "[Programmers][Javascript] 땅따먹기", "url": "/posts/prog_12913/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-29 18:00:00 +0900", "snippet": "Programmers - 땅따먹기문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/12913문제땅따먹기 게임을 하려고 합니다. 땅따먹기 게임의 땅(land)은 총 N행 4열로 이루어져 있고, 모든 칸에는 점수가 쓰여 있습니다. 1행부터 땅을 밟으며 한 행씩 내려올 때, 각 행의 4칸 중 한 칸만 밟으면서 내려와야 합니다. 단, 땅따먹기 게임에는 한 행씩 내려올 때, 같은 열을 연속해서 밟을 수 없는 특수 규칙이 있습니다.예를 들면, 1 2 ..." }, { "title": "[Javascript] FindIndex", "url": "/posts/findindex/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd, dictionary", "date": "2021-01-29 18:00:00 +0900", "snippet": "findIndexfindIndex 메서드는 주어진 판별함수를 만족하는 배열의 첫 번째 요소에 대한 인덱스를 반환한다. 만족하는 요소가 없다면 -1을 반환한다.구문 arr.findIndex(callback(element[, index[, array]])[, thisArg]) callback : 3개의 인수를 취하여 배열의 각 값에 대해 실행할 함수이다. element : 배열에서 처리중인 현재 요소 index : 배열에서 처리중인 현재 요소의 인덱스 array : findIndex 함수가 호..." }, { "title": "[Javascript] Assign", "url": "/posts/assign/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd, dictionary", "date": "2021-01-29 18:00:00 +0900", "snippet": "assignassign 메서드는 열거할 수 있는 하나 이상의 출처 객체로부터 대상 객체로 속성을 복사할 때 사용한다. 대상 객체를 반환한다.구문 Object.assign(target, …sources) target : 대상 객체 sources : 하나 이상의 출처 객체예시const A = {a:1, b:2};const B = {c:3, d:4};const C = {e:5, f:6};const D = Object.assign(A,B); // A 가 target 이므로 A 도 변경됨const E = Object.assig..." }, { "title": "[BlackCoffee] Week2 - TodoList with Ajax 3", "url": "/posts/bc_week2_03/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-01-29 17:00:00 +0900", "snippet": "Week2 - TodoList with Ajax 33. AjaxPost.js3-1. initializeimport { currentUserID } from &quot;./ControlUserList.js&quot;; // 1import { reflectUserItems, ajaxGetFunctions } from &quot;./AjaxGet.js&quot;; // 2import { chooseButton } from &quot;./ControlTodoButton.js&quot;; /..." }, { "title": "[BlackCoffee] Week2 - TodoList with Ajax 2", "url": "/posts/bc_week2_02/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-01-28 22:00:00 +0900", "snippet": "Week2 - TodoList with Ajax 22. AjaxGet.js2-1. initializeimport { todoList, listAssemble } from &quot;./AddNewItem.js&quot;;import { chooseButton } from &quot;./ControlTodoButton.js&quot;;import { currentUserID } from &quot;./ControlUserList.js&quot;const userList = document.querySelector(&quot;#u..." }, { "title": "[BlackCoffee] Week2 - TodoList with Ajax 1", "url": "/posts/bc_week2_01/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-01-28 21:00:00 +0900", "snippet": "Week2 - TodoList with Ajax 12주차는 Ajax 를 사용하여 서버와 비동기적으로 통신하는 Todo List 를 만드는 것이다.기존 이제는 LocalStorage 를 사용하지 않고 별도의 서버에 데이터를 저장하므로 코드에 많은 변경이 있었다.요구사항 User 추가하기 User의 투두리스트 불러오기 User 삭제하기 todoItem 추가하기 todoItem 불러오기 todoItem complete하기 todoItem 삭제하기 todoItem contents 내용 수정하기심화 요구사항 데이터를 불..." }, { "title": "[BlackCoffee] Week1 - TodoList with CRUD review", "url": "/posts/bc_week1_06/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-01-25 22:00:00 +0900", "snippet": "저번 시간까지 구현하고자 하는 기능은 모두 완성했다.1주차가 마무리 되기 전에 리뷰를 통해 수정된 부분들을 정리해보고자 한다.1. changeBox 리펙토링review#1기존의 changeBox 는 불필요하게 class 를 추가하고 삭제하는 부분이 많았다. 때문에 전체 요소에서 selected 클래스를 삭제하고, 필요한 요소에만 다시 추가하는 방식으로 코드의 길이를 줄였다.2. var 변수를 const 변수로review#2코드 맨 앞에서 각 요소들을 지정해 저장한 변수들은 앞으로 수정될 일이 없으므로 const 로 선언하도록 ..." }, { "title": "[Programmers][Javascript] 다음 큰 숫자", "url": "/posts/prog_12911/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-24 22:30:00 +0900", "snippet": "Programmers - 다음 큰 숫자문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/12911문제자연수 n이 주어졌을 때, n의 다음 큰 숫자는 다음과 같이 정의 합니다. 조건 1. n의 다음 큰 숫자는 n보다 큰 자연수 입니다. 조건 2. n의 다음 큰 숫자와 n은 2진수로 변환했을 때 1의 갯수가 같습니다. 조건 3. n의 다음 큰 숫자는 조건 1, 2를 만족하는 수 중 가장 작은 수 입니다.예를 들어서 78(1001110)의 다음 큰 숫자는 83(101001..." }, { "title": "[Programmers][Javascript] 올바른 괄호", "url": "/posts/prog_12909/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-24 21:30:00 +0900", "snippet": "Programmers - 올바른 괄호문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/12909문제괄호가 바르게 짝지어졌다는 것은 ‘(‘ 문자로 열렸으면 반드시 짝지어서 ‘)’ 문자로 닫혀야 한다는 뜻입니다. 예를 들어 ()() 또는 (())() 는 올바른 괄호입니다. )()( 또는 (()( 는 올바르지 않은 괄호입니다.’(‘ 또는 ‘)’ 로만 이루어진 문자열 s가 주어졌을 때, 문자열 s가 올바른 괄호이면 true를 return 하고, 올바르지 않은 괄호이면 fals..." }, { "title": "[Programmers][Javascript] 튜플", "url": "/posts/prog_64065/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-24 20:00:00 +0900", "snippet": "Programmers -튜플문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/64065문제셀수있는 수량의 순서있는 열거 또는 어떤 순서를 따르는 요소들의 모음을 튜플(tuple)이라고 합니다. n개의 요소를 가진 튜플을 n-튜플(n-tuple)이라고 하며, 다음과 같이 표현할 수 있습니다. (a1, a2, a3, ..., an)튜플은 다음과 같은 성질을 가지고 있습니다. 중복된 원소가 있을 수 있습니다. ex : (2, 3, 1, 2) 원소에 정해진 순서가 있으며, ..." }, { "title": "[Programmers][Javascript] 가장 큰 정사각형 찾기", "url": "/posts/prog_12905/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-24 16:00:00 +0900", "snippet": "Programmers - 가장 큰 정사각형 찾기문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/12905문제1와 0로 채워진 표(board)가 있습니다. 표 1칸은 1 x 1 의 정사각형으로 이루어져 있습니다. 표에서 1로 이루어진 가장 큰 정사각형을 찾아 넓이를 return 하는 solution 함수를 완성해 주세요. (단, 정사각형이란 축에 평행한 정사각형을 말합니다.)예를 들어가 있다면 가장 큰 정사각형은가 되며 넓이는 9가 되므로 9를 반환해 주면 됩니다.제한 사..." }, { "title": "[Programmers][Javascript] 카펫", "url": "/posts/prog_42842/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-23 23:00:00 +0900", "snippet": "Programmers - 카펫문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/42842문제Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 노란색으로 칠해져 있고 테두리 1줄은 갈색으로 칠해져 있는 격자 모양 카펫을 봤습니다.Leo는 집으로 돌아와서 아까 본 카펫의 노란색과 갈색으로 색칠된 격자의 개수는 기억했지만, 전체 카펫의 크기는 기억하지 못했습니다.Leo가 본 카펫에서 갈색 격자의 수 brown, 노란색 격자의 수 yellow가 매개변수로 주어질 때 카펫의 ..." }, { "title": "[BlackCoffee] Week1 - TodoList with CRUD 5", "url": "/posts/bc_week1_05/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-01-23 22:00:00 +0900", "snippet": "7. localStorage 저장 및 불러오기지금까지 만든 todo list 는 잘 동작하지만, 값을 저장할 수는 없다. localStorage 를 활용하여 리스트의 값을 저장하고 불러올 수 있도록 하는 것이 목표이다.function init() { // 페이지 로드 시 이벤트 리스너 부착 ... window.addEventListener(&quot;beforeunload&quot;, saveLocalStorage); // 1 window.addEventListener(&quot;DOMContentLoaded&..." }, { "title": "[Programmers][Javascript] 타겟 넘버", "url": "/posts/prog_43165/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-23 21:00:00 +0900", "snippet": "Programmers - 타겟 넘버문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/43165문제n개의 음이 아닌 정수가 있습니다. 이 수를 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 예를 들어 [1, 1, 1, 1, 1]로 숫자 3을 만들려면 다음 다섯 방법을 쓸 수 있습니다.-1+1+1+1+1 = 3+1-1+1+1+1 = 3+1+1-1+1+1 = 3+1+1+1-1+1 = 3+1+1+1+1-1 = 3사용할 수 있는 숫자가 담긴 배열 numbers, 타겟 넘버 t..." }, { "title": "[BlackCoffee] Week1 - TodoList with CRUD 4", "url": "/posts/bc_week1_04/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-01-23 21:00:00 +0900", "snippet": "6. 버튼에 따른 출력 item 변경todo list 의 하단에는 3가지 버튼이 존재한다. 전체보기 : 모든 item 을 출력한다. 해야할 일 : 아직 체크표시가 되지 않은 item 을 출력한다. 완료한 일 : 체크표시가 된 item 을 출력한다.이 버튼을 눌렀을 때 각각의 경우에 맞는 item 들을 출력하는 것이 목표이다.보이고자 하는 item 의 li 클래스에는 selected 클래스를 추가하여 구분할 것이다.var viewAllList = document.querySelector(&quot;.all&quot;); ..." }, { "title": "[Programmers][Javascript] 위장", "url": "/posts/prog_42578/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-23 20:00:00 +0900", "snippet": "Programmers - 위장문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/42578문제스파이들은 매일 다른 옷을 조합하여 입어 자신을 위장합니다.예를 들어 스파이가 가진 옷이 아래와 같고 오늘 스파이가 동그란 안경, 긴 코트, 파란색 티셔츠를 입었다면 다음날은 청바지를 추가로 입거나 동그란 안경 대신 검정 선글라스를 착용하거나 해야 합니다. 종류 이름 얼굴 동그란 안경, 검정 선글라스 ..." }, { "title": "[BlackCoffee] Week1 - TodoList with CRUD 3", "url": "/posts/bc_week1_03/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-01-23 20:00:00 +0900", "snippet": "4. 엘리먼트 수정 기능todo list 에 존재하는 item 을 더블클릭 했을 때 input 모드로 변경되면서 숨겨져 있던 input 요소가 등장하고, 이 곳에서 기존의 값을 수정할 수 있다.Enter 를 누르면 수정된 값이 적용되고 Esc 를 누르면 수정 내용이 미반영된 상태로 다시 view 모드가 된다.function workContentCopy(e) { // 1 let li = e.target.parentNode.parentNode; // 2 li.classList.a..." }, { "title": "[Programmers][Javascript] 구명보트", "url": "/posts/prog_42885/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-22 20:00:00 +0900", "snippet": "Programmers - 구명보트문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/42885문제무인도에 갇힌 사람들을 구명보트를 이용하여 구출하려고 합니다. 구명보트는 작아서 한 번에 최대 2명씩 밖에 탈 수 없고, 무게 제한도 있습니다.예를 들어, 사람들의 몸무게가 [70kg, 50kg, 80kg, 50kg]이고 구명보트의 무게 제한이 100kg이라면 2번째 사람과 4번째 사람은 같이 탈 수 있지만 1번째 사람과 3번째 사람의 무게의 합은 150kg이므로 구명보트의 무게..." }, { "title": "[BlackCoffee] Week1 - TodoList with CRUD 2", "url": "/posts/bc_week1_02/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-01-21 23:00:00 +0900", "snippet": "2. 체크박스로 complete 상태 변경리스트에 존재하는 item 의 체크박스를 통해 해당 할 일을 완료처리 하는 기능이다.function workCheck(e) { // 1 let li = e.target.parentNode.parentNode; // 2 if (e.target.checked) { // 3 e.target.setAttribute(&quot;checked&quot;, &quot;&quot;); li.classList.add(..." }, { "title": "[BlackCoffee] Week1 - TodoList with CRUD 1", "url": "/posts/bc_week1_01/", "categories": "Study, Black Coffee", "tags": "Javascript, HTML, FrontEnd, Black Coffee", "date": "2021-01-21 21:00:00 +0900", "snippet": "Black Coffee Study프론트엔드 이론 공부를 하면서 단순히 정리만 하는 공부로는 한계가 있다고 느꼈다. 어떤 공부라도 그럴 것이다.직접 웹 페이지를 만드는 토이 프로젝트도 몇 가지 구상하고 있었지만 적절한 아이디어를 찾기도 힘들었고 무엇보다 자신감이 생기지 않았다.그런 와중에 블랙 커피 스터디라는 프로그램을 알게 되었다.프론트엔드 코드리뷰 스터디 라는 내용으로, 이론이 아닌 미션 기반의 학습이 진행되고 코드리뷰와 커뮤니케이션을 통해 코드를 개선하는 것이 특징이라고 한다.어떤 선생이 나의 코드를 봐가며 같이 작성해주는..." }, { "title": "[Programmers][Javascript] 괄호 변환", "url": "/posts/prog_60058/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-21 20:55:00 +0900", "snippet": "Programmers - 괄호 변환문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/60058문제카카오에 신입 개발자로 입사한 콘은 선배 개발자로부터 개발역량 강화를 위해 다른 개발자가 작성한 소스 코드를 분석하여 문제점을 발견하고 수정하라는 업무 과제를 받았습니다. 소스를 컴파일하여 로그를 보니 대부분 소스 코드 내 작성된 괄호가 개수는 맞지만 짝이 맞지 않은 형태로 작성되어 오류가 나는 것을 알게 되었습니다.수정해야 할 소스 파일이 너무 많아서 고민하던 콘은 소스 코드..." }, { "title": "[Programmers][Javascript] 큰 수 만들기", "url": "/posts/prog_42883/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-19 22:00:00 +0900", "snippet": "Programmers - 큰 수 만들기문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/42883문제어떤 숫자에서 k개의 수를 제거했을 때 얻을 수 있는 가장 큰 숫자를 구하려 합니다.예를 들어, 숫자 1924에서 수 두 개를 제거하면 [19, 12, 14, 92, 94, 24] 를 만들 수 있습니다. 이 중 가장 큰 숫자는 94 입니다.문자열 형식으로 숫자 number와 제거할 수의 개수 k가 solution 함수의 매개변수로 주어집니다. number에서 k 개의 수를 ..." }, { "title": "[Programmers][Javascript] 스킬트리", "url": "/posts/prog_49993/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-18 19:00:00 +0900", "snippet": "Programmers - 스킬 트리문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/49993문제선행 스킬이란 어떤 스킬을 배우기 전에 먼저 배워야 하는 스킬을 뜻합니다.예를 들어 선행 스킬 순서가 스파크 → 라이트닝 볼트 → 썬더일때, 썬더를 배우려면 먼저 라이트닝 볼트를 배워야 하고, 라이트닝 볼트를 배우려면 먼저 스파크를 배워야 합니다.위 순서에 없는 다른 스킬(힐링 등)은 순서에 상관없이 배울 수 있습니다. 따라서 스파크 → 힐링 → 라이트닝 볼트 → 썬더와 같은 ..." }, { "title": "[Programmers][Javascript] 다리를 지나는 트럭", "url": "/posts/prog_42583/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-18 16:00:00 +0900", "snippet": "Programmers - 다리를 지나는 트럭문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/42583문제트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다. 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다. ※ 트럭이 다리에 완전히 오르지 않은 경우, 이 트럭의 무게는 고려하지 않습니다.예를 들어, 길이가 2이고 1..." }, { "title": "[Programmers][Javascript] 프린터", "url": "/posts/prog_42587/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-17 23:00:00 +0900", "snippet": "Programmers - 프린터문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/42587문제일반적인 프린터는 인쇄 요청이 들어온 순서대로 인쇄합니다. 그렇기 때문에 중요한 문서가 나중에 인쇄될 수 있습니다. 이런 문제를 보완하기 위해 중요도가 높은 문서를 먼저 인쇄하는 프린터를 개발했습니다. 이 새롭게 개발한 프린터는 아래와 같은 방식으로 인쇄 작업을 수행합니다. 인쇄 대기목록의 가장 앞에 있는 문서(J)를 대기목록에서 꺼냅니다. 나머지 인쇄 대기목록에서 J보다 중요..." }, { "title": "[Programmers][Javascript] 기능개발", "url": "/posts/prog_42586/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-17 21:00:00 +0900", "snippet": "Programmers - 기능개발문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/42586문제프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업..." }, { "title": "[Programmers][Javascript] 다트 게임", "url": "/posts/prog_17682/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-17 18:00:00 +0900", "snippet": "Programmers - 다트 게임문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/17682문제카카오톡 게임별의 하반기 신규 서비스로 다트 게임을 출시하기로 했다. 다트 게임은 다트판에 다트를 세 차례 던져 그 점수의 합계로 실력을 겨루는 게임으로, 모두가 간단히 즐길 수 있다. 갓 입사한 무지는 코딩 실력을 인정받아 게임의 핵심 부분인 점수 계산 로직을 맡게 되었다. 다트 게임의 점수 계산 로직은 아래와 같다. 다트 게임은 총 3번의 기회로 구성된다. 각 기회마..." }, { "title": "[Programmers][Javascript] 실패율", "url": "/posts/prog_42889/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-17 17:00:00 +0900", "snippet": "Programmers - 실패율문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/42889문제슈퍼 게임 개발자 오렐리는 큰 고민에 빠졌다. 그녀가 만든 프랜즈 오천성이 대성공을 거뒀지만, 요즘 신규 사용자의 수가 급감한 것이다. 원인은 신규 사용자와 기존 사용자 사이에 스테이지 차이가 너무 큰 것이 문제였다.이 문제를 어떻게 할까 고민 한 그녀는 동적으로 게임 시간을 늘려서 난이도를 조절하기로 했다. 역시 슈퍼 개발자라 대부분의 로직은 쉽게 구현했지만, 실패율을 구하는 부..." }, { "title": "[Programmers][Javascript] 비밀지도", "url": "/posts/prog_17681/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-17 16:00:00 +0900", "snippet": "Programmers - 비밀지도문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/17681문제네오는 평소 프로도가 비상금을 숨겨놓는 장소를 알려줄 비밀지도를 손에 넣었다. 그런데 이 비밀지도는 숫자로 암호화되어 있어 위치를 확인하기 위해서는 암호를 해독해야 한다. 다행히 지도 암호를 해독할 방법을 적어놓은 메모도 함께 발견했다. 지도는 한 변의 길이가 n인 정사각형 배열 형태로, 각 칸은 공백(“ “) 또는 벽(“#”) 두 종류로 이루어져 있다. 전체 지도는 두 장의..." }, { "title": "[Javascript] Repeat", "url": "/posts/repeat/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd, dictionary", "date": "2021-01-17 16:00:00 +0900", "snippet": "repeatrepeat 메서드는 문자열을 주어진 횟수만큼 반복해 붙인 새로운 문자열을 반환합니다.구문 str.repeat(count); count : 문자열을 반복할 횟수. 0과 양의 무한대 사이의 정수 가능 반복 횟수는 양의 정수여야 하며, 최대 문자열의 크기를 넘어서는 안된다.예시&#39;abc&#39;.repeat(-1); // RangeError&#39;abc&#39;.repeat(0); // &#39;&#39;&#39;abc&#39;.repeat(1); // &#39;abc&#39;&#39;abc&..." }, { "title": "[Javascript] Fill", "url": "/posts/fill/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd, dictionary", "date": "2021-01-16 19:30:00 +0900", "snippet": "fillfill 메서드는 배열에서 지정된 시작 인덱스부터 끝 인덱스 이전까지 정적인 값 하나로 채우는 역할을 한다.구문 arr.fill(value[, start[, end]]) value : 배열울 채울 값 start : 시작 인덱스. 초기값은 0 end : 끝 인덱스. 기본 값은 this.length예시var a1 = [1, 2, 3, 4, 5];var a2 = [1, 2, 3, 4, 5];var a3 = [1, 2, 3, 4, 5];a1.fill(6);a2.fill(6,2);a3.fill(6,2,4);console...." }, { "title": "[Javascript] Reduce", "url": "/posts/reduce/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd, dictionary", "date": "2021-01-16 16:30:00 +0900", "snippet": "reducereduce 메서드는 배열의 각 요소에 대해 주어진 리듀서(reducer) 함수를 실행하고, 하나의 결과값을 반환한다.구문 arr.reduce(callback[, initialValue]) callback : 배열 요소에 대해 실행할 함수. 4가지 인수를 가진다 accumulator : callback 함수의 반환값을 누적한다. initialValue가 제공된 경우에는 이를 가진다. currentValue : 처리할 현재 요소 currentIndex : 처리할 요소의 인덱스. i..." }, { "title": "[Javascript] Map", "url": "/posts/map/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd, dictionary", "date": "2021-01-16 16:30:00 +0900", "snippet": "mapmap 메서드는 배열 내의 모든 요소 각각에 대하여 주어진 함수를 호출한 결과를 모아 기존의 배열을 변경하는 것이 아닌, 새로운 배열을 반환한다.구문 arr.map(callback(currentValue[, index[, array]])[, thisArg]) callback : 새로운 배열 요소를 생성하는 함수. 3가지 인수를 가진다. currentValue : 처리할 현재 요소 index : 처리할 현재 요소의 인덱스 array : map 메서드를 호출한 배열 thisArg..." }, { "title": "[Programmers][Javascript] 키패드 누르기", "url": "/posts/prog_67256/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-16 16:00:00 +0900", "snippet": "Programmers - 키패드 누르기문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/67256문제스마트폰 전화 키패드의 각 칸에 다음과 같이 숫자들이 적혀 있습니다.이 전화 키패드에서 왼손과 오른손의 엄지손가락만을 이용해서 숫자만을 입력하려고 합니다. 맨 처음 왼손 엄지손가락은 * 키패드에 오른손 엄지손가락은 # 키패드 위치에서 시작하며, 엄지손가락을 사용하는 규칙은 다음과 같습니다. 엄지손가락은 상하좌우 4가지 방향으로만 이동할 수 있으며 키패드 이동 한 칸은 거..." }, { "title": "[Javascript] Match", "url": "/posts/match/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd, dictionary", "date": "2021-01-15 16:30:00 +0900", "snippet": "matchmatch 메소드는 주어진 문자열이 정규표현식과 매치되는 부분을 검색한다.구문 str.match(regexp) regexp : 정규표현식 개체이다. 객체가 전달된다면 new RegExp(obj) 를 사용하여 암묵적으로 RegExp로 변환된다. 매개변수 없이 사용하면 빈 문자열의 배열이 반환된다.예시var str=&quot;coding everybody, Everywhere, evERytime&quot;;var patt1=/every.+/gi;console.log(str.match(patt1)); // [&quot;..." }, { "title": "[Javascript] Filter", "url": "/posts/filter/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd, dictionary", "date": "2021-01-15 16:00:00 +0900", "snippet": "filterfilter 메소드는 주어진 함수를 통과하는 모든 요소들을 모아 새로운 배열로 반환한다.구문 arr.filter(callback(element[, index[, array]])[, thisArg]) callback : 각 요소를 체크할 함수. true 는 요소를 포함, false 는 버린다. 3개의 매개변수를 받을 수 있다. element : 처리할 현재 요소 index : 처리할 현재 요소의 인덱스 array : filter 를 호출한 배열 예시var words = [..." }, { "title": "[React] React 정리 - 4", "url": "/posts/studuing_react4/", "categories": "Study, React", "tags": "Javascript, HTML, FrontEnd, React", "date": "2021-01-15 12:00:00 +0900", "snippet": "React 정리 - 4공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 Update 기능 Delete 기능 Update 기능다음은 CRUD 중 Update 에 대해 구현해보려고 한다. Update 는 Read 와 Create 를 동시에 한다고 생각하면 된다. 선택한 항목에 대한 id, title, desc 을 컴포넌트로 전달하여 input 칸에 기존의 값들이 기본적으로 삽입되어있도록 설정하고, 이를 사용자가 수정할 수 있도록 할 것이다.그 전에 구현의 편의성을 위해 약간의..." }, { "title": "[React] React 정리 - 3", "url": "/posts/studuing_react3/", "categories": "Study, React", "tags": "Javascript, HTML, FrontEnd, React", "date": "2021-01-14 12:00:00 +0900", "snippet": "React 정리 - 3공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 Create 기능 shouldComponentUpdate Create 기능모든 정보 기술은 Create, Read, Update, Delete (CRUD) 에 집합이라고 할 수 있다. 이번에는 React 를 사용하여 정보를 직접 추가하는 Create 관련 기능들을 구현해보려 한다.위 사진은 우리가 지금까지 구현했고 앞으로 구현할 내용들을 담은 웹 페이지이다. WEB 을 누르면 하단의 Content 영..." }, { "title": "[React] React 정리 - 2", "url": "/posts/studuing_react2/", "categories": "Study, React", "tags": "Javascript, HTML, FrontEnd, React", "date": "2021-01-13 12:00:00 +0900", "snippet": "React 정리 - 2공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 이벤트 적용하기 이벤트 적용하기이벤트와 관련된 작업을 추가하기 위해서는 이전에 자바스크립트 공부에서 언급했던 bind 와 state 의 성질에 대해 이해해야한다.우선 이벤트를 구현하기 위한 state 값들의 준비와 render 내의 코드들을 작성하였다.this.state = { mode:&#39;welcome&#39;, selected_content_id:2, welcome:{titl..." }, { "title": "[Programmers][Javascript] 체육복", "url": "/posts/prog_42862/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-12 21:00:00 +0900", "snippet": "Programmers - 체육복문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/42862문제점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 체육복이 없으면 수업을 들을 수 없기 때문에..." }, { "title": "[React] React 정리 - 1", "url": "/posts/studuing_react1/", "categories": "Study, React", "tags": "Javascript, HTML, FrontEnd, React", "date": "2021-01-12 12:00:00 +0900", "snippet": "React 정리 - 1공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 React란? 1. JSX 문법 2. Component 기반 3. Virtual DOM React 의 구조 index.html index.js App.js Component 제작 props ..." }, { "title": "[Javascript] Javascript 정리 - 8", "url": "/posts/studuing_javascript8/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd", "date": "2021-01-11 12:00:00 +0900", "snippet": "Javascript 정리 - 8공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 Constructor Prototype Class __proto__ Call &amp;amp; Bind Call Bind Prototype vs __proto__ Constructor같은 형태를 가진 객체를 여러개 생성할 때 사용할 수 있는 방식이다. 어떠한 함수에 대하여 새로운 객체를 ..." }, { "title": "[Programmers][Javascript] 완주하지 못한 선수", "url": "/posts/prog_42576/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-10 23:00:00 +0900", "snippet": "Programmers - 완주하지 못한 선수문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/42576문제수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.제약 사항 마라톤 경기에 참여한 선수..." }, { "title": "[Programmers][Javascript] 크레인 인형뽑기 게임", "url": "/posts/prog_64061/", "categories": "Study, Programmers", "tags": "Algorithm, Programmers, Javascript", "date": "2021-01-10 21:00:00 +0900", "snippet": "Programmers - 크레인 인형뽑기 게임문제 링크 : https://programmers.co.kr/learn/courses/30/lessons/64061문제게임개발자인 죠르디는 크레인 인형뽑기 기계를 모바일 게임으로 만들려고 합니다.죠르디는 게임의 재미를 높이기 위해 화면 구성과 규칙을 다음과 같이 게임 로직에 반영하려고 합니다.게임 화면은 1 x 1 크기의 칸들로 이루어진 N x N 크기의 정사각 격자이며 위쪽에는 크레인이 있고 오른쪽에는 바구니가 있습니다.각 격자 칸에는 다양한 인형이 들어 있으며 인형이 없는 칸은 ..." }, { "title": "[Javascript] Ajax 정리", "url": "/posts/studuing_ajax1/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd, Ajax", "date": "2021-01-10 12:00:00 +0900", "snippet": "Ajax 정리공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 Ajax XMLHttpRequest API Fetch API Fragment Identifier JSON AjaxAjax 는 Asynchronous Javascript and XML의 약자로 비동기적 자바스크립트와 XML 이라고 할 수 있다. Ajax 는 웹브라우저와 웹서버가 내부적으로 데이터통신을 하게 한다. 그리고 변경된 결과를 웹페이지에 프로그래밍적으로 반영하여 웹페이지의 로딩 ..." }, { "title": "[Machine Learning] TensorFlow 정리 - 2", "url": "/posts/studing_tensorFlow2/", "categories": "Study, Javascript", "tags": "Machine Learning, Javascript, TensorFlow", "date": "2021-01-09 14:00:00 +0900", "snippet": "TensorFlow 정리 - 2 이 문서에 있는 내용들 변수가 여러개일 때 딥러닝 - Hidden Layer 변수가 여러개일 때이전까지 살펴봤던 예제에서는 원인이 되는 열이 1개 뿐이었다. 여기서 원인이 되는 열이 많아진다면 계산은 더 복잡해질 수 있다.위 테이블은 회귀분석을 위한 예시로 유명한 보스톤 주택 가격 표이다. 위 사진에서 1~13번 열은 원인, 결과가 되는 값은 가장 오른쪽에 있는 14번째 집값 열이고, 이는 해당 지역의 집값 중 중간값을 의미한다.이번에는 이 값들을 가지고 분석..." }, { "title": "[Machine Learning] TensorFlow 정리 - 1", "url": "/posts/studing_tensorFlow1/", "categories": "Study, Javascript", "tags": "Machine Learning, Javascript, TensorFlow", "date": "2021-01-08 20:35:00 +0900", "snippet": "TensorFlow 정리 - 1 이 문서에 있는 내용들 머신 러닝이란? 지도학습 지도학습의 작업 순서 모델 나의 모델 만들기 라이브러리 설치 과거의 데이터 준비하기 모델의 모양 만들기 모델을 학습시키기 모델의 이용과 학습 정확도 측정 가중치와 편향 Tensorflow.js 는 자바스크립트로 딥러닝을 이용할 수 있도록 돕는 ..." }, { "title": "[Javascript] Javascript 정리 - 7", "url": "/posts/studuing_javascript7/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd", "date": "2021-01-07 12:00:00 +0900", "snippet": "Javascript 정리 - 7공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 이벤트 타입 - Form submit change blur, focus 문서 로딩 마우스 이벤트 이벤트 타입 - Form&amp;lt;form&amp;gt; 태그는 웹 페이지에서 입력 양식을 의미한다. 태그 하위에 존재하는 &amp;lt;input&amp;gt; 태그들에 입력된 값들을 form 태그..." }, { "title": "[Javascript] Javascript 정리 - 6", "url": "/posts/studuing_javascript6/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd", "date": "2021-01-06 12:00:00 +0900", "snippet": "Javascript 정리 - 6공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 이벤트 - 등록 Inline Property Listener addEventListener 이벤트 전파 (버블링&amp;amp;캡처링) 이벤트 - 등록이벤트를 등록하는 방법에는 여러가지가 있다.Inline&amp;lt;input type=&quot;button&quot; onclick=&quot;alert(..." }, { "title": "[Baekjoon][C++] 1181 - 단어 정렬 ", "url": "/posts/BOJ_1181/", "categories": "Study, Baekjoon", "tags": "Algorithm, Baekjoon, C++", "date": "2021-01-05 23:50:00 +0900", "snippet": "백준 1181번 - 단어 정렬문제 링크 : https://www.acmicpc.net/problem/1181문제알파벳 소문자로 이루어진 N개의 단어가 들어오면 아래와 같은 조건에 따라 정렬하는 프로그램을 작성하시오. 길이가 짧은 것부터 길이가 같으면 사전 순으로입력첫째 줄에 단어의 개수 N이 주어진다. (1 ≤ N ≤ 20,000) 둘째 줄부터 N개의 줄에 걸쳐 알파벳 소문자로 이루어진 단어가 한 줄에 하나씩 주어진다. 주어지는 문자열의 길이는 50을 넘지 않는다.출력조건에 따라 정렬하여 단어들을 출력한다. 단, 같은 단어..." }, { "title": "[Baekjoon][C++] 2447 - 별 찍기 - 10", "url": "/posts/BOJ_2447/", "categories": "Study, Baekjoon", "tags": "Algorithm, Baekjoon, C++", "date": "2021-01-05 23:50:00 +0900", "snippet": "백준 2447번 - 별 찍기 - 10문제 링크 : https://www.acmicpc.net/problem/2447문제재귀적인 패턴으로 별을 찍어 보자. N이 3의 거듭제곱(3, 9, 27, …)이라고 할 때, 크기 N의 패턴은 N×N 정사각형 모양이다.크기 3의 패턴은 가운데에 공백이 있고, 가운데를 제외한 모든 칸에 별이 하나씩 있는 패턴이다.N이 3보다 클 경우, 크기 N의 패턴은 공백으로 채워진 가운데의 (N/3)×(N/3) 정사각형을 크기 N/3의 패턴으로 둘러싼 형태이다. 예를 들어 크기 27의 패턴은 예제 출력 1..." }, { "title": "[Javascript] Javascript 정리 - 5", "url": "/posts/studuing_javascript5/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd", "date": "2021-01-05 21:00:00 +0900", "snippet": "Javascript 정리 - 5공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 Node API 관계 관련 API 종류 관련 API 변경 관련 API 문자열 노드 제어 Text 객체 문서 요소들의 위치와 크기 파악 Node APINode 는 DOM 에서 가장 상위의 객체이므로 모든 DOM 객체는 Node 객체를 상속받는다. 때문에 Node 객체가 가진 prope..." }, { "title": "[Baekjoon][C++] 1002 - 터렛", "url": "/posts/BOJ_1002/", "categories": "Study, Baekjoon", "tags": "Algorithm, Baekjoon, C++", "date": "2021-01-04 23:50:00 +0900", "snippet": "백준 1002번 - 터렛문제 링크 : https://www.acmicpc.net/problem/1002문제조규현과 백승환은 터렛에 근무하는 직원이다. 하지만 워낙 존재감이 없어서 인구수는 차지하지 않는다.이석원은 조규현과 백승환에게 상대편 마린(류재명)의 위치를 계산하라는 명령을 내렸다. 조규현과 백승환은 각각 자신의 터렛 위치에서 현재 적까지의 거리를 계산했다.조규현의 좌표 (x1, y1)와 백승환의 좌표 (x2, y2)가 주어지고, 조규현이 계산한 류재명과의 거리 r1과 백승환이 계산한 류재명과의 거리 r2가 주어졌을 때,..." }, { "title": "[Javascript] Javascript 정리 - 4", "url": "/posts/studuing_javascript4/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd", "date": "2021-01-04 15:00:00 +0900", "snippet": "Javascript 정리 - 4공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 HTMLElement &amp;amp; HTMLCollection Element API 식별 API 조회 API 속성 API Attribute vs Property HTMLElement &amp;amp; HTMLCollection&amp;lt;a id=&quot;anchor&quot; hre..." }, { "title": "[Javascript] Javascript 정리 - 3", "url": "/posts/studuing_javascript3/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd", "date": "2021-01-03 15:00:00 +0900", "snippet": "Javascript 정리 - 3공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 alert, confirm, prompt Location Navigator 창 제어 제어 대상 탐색 alert, confirm, prompt&amp;lt;script&amp;gt; function func(){ if(&#39;Do you want to login?&#39;){ if(prompt(&#39;id : &#39;) ===..." }, { "title": "[Baekjoon][C++] 10757 - 큰 수 A+B", "url": "/posts/BOJ_10757/", "categories": "Study, Baekjoon", "tags": "Algorithm, Baekjoon, C++", "date": "2021-01-02 22:00:00 +0900", "snippet": "백준 10757번 - 큰 수 A+B문제 링크 : https://www.acmicpc.net/problem/10757문제두 정수 A와 B를 입력받은 다음, A+B를 출력하는 프로그램을 작성하시오.입력첫째 줄에 A와 B가 주어진다. (0 &amp;lt; A,B &amp;lt; 10^10000)출력첫째 줄에 A+B를 출력한다.예제 입력19223372036854775807 9223372036854775808예제 출력118446744073709551615내 풀이C 나 C++ 에서는 입력 값에 주어진 범위 만큼 큰 수를 처리할 수 있는 ..." }, { "title": "[Javascript] Javascript 정리 - 2", "url": "/posts/studuing_javascript2/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd", "date": "2021-01-01 20:40:00 +0900", "snippet": "Javascript 정리 - 2공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 Arguments Call &amp;amp; Apply Inheritance &amp;amp; Prototype Standard Built-in Object Arguments&amp;lt;script&amp;gt; function sum(){ var i, _sum = 0; for(i = 0; i &amp;lt; arguments.length; i++){ ..." }, { "title": "[Javascript] Javascript 정리 - 1", "url": "/posts/studuing_javascript/", "categories": "Study, Javascript", "tags": "Javascript, HTML, FrontEnd", "date": "2020-12-29 20:35:00 +0900", "snippet": "Javascript 정리 - 1공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 정규 표현식 배열 함수 Callback 함수 클로저 정규 표현식정규 표현식은 자바스크립트 외에서도 사용할 수 있다.모든 정규 표현식은 /정규표현식/ 과 같이 표현한다. ^word : ‘word’ 로 시작하는 문장을 찾음 word$ : ‘word’ 로 끝나는 문장을 찾음 \\$ : 특수문자인 $에 대해 지목함 . : 어떠한 문자던 지목함 A. : A와 한 ..." }, { "title": "[CSS] CSS 정리 - 5", "url": "/posts/studuing_css5/", "categories": "Study, CSS", "tags": "CSS, HTML, FrontEnd", "date": "2020-12-29 14:00:00 +0900", "snippet": "CSS 정리 - 5공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 Link Import 코드 경량화 Preprocessor Link Import&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;파일명.css&quot;&amp;gt;&amp;lt;style&amp;gt; @import &quot;파일명.css&quot;; @import url(&quot;파일명.css&quot;);&amp;lt;/style&amp..." }, { "title": "[CSS] CSS 정리 - 4", "url": "/posts/studuing_css4/", "categories": "Study, CSS", "tags": "CSS, HTML, FrontEnd", "date": "2020-12-28 21:10:00 +0900", "snippet": "CSS 정리 - 4공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 Mediaquery Float &amp;amp; Clear Multi Column Background Transition Filter Blend Transform Mediaquery&amp;lt;style&amp;gt; @media (max-width:600px){ body{ background-color: gree..." }, { "title": "[Baekjoon][C++] 1011 - Fly me to the Alpha Centauri", "url": "/posts/BOJ_1011/", "categories": "Study, Baekjoon", "tags": "Algorithm, Baekjoon, C++", "date": "2020-12-27 22:00:00 +0900", "snippet": "백준 1011번 - Fly me to the Alpha Centauri문제 링크 : https://www.acmicpc.net/problem/1011문제우현이는 어린 시절, 지구 외의 다른 행성에서도 인류들이 살아갈 수 있는 미래가 오리라 믿었다. 그리고 그가 지구라는 세상에 발을 내려 놓은 지 23년이 지난 지금, 세계 최연소 ASNA 우주 비행사가 되어 새로운 세계에 발을 내려 놓는 영광의 순간을 기다리고 있다.그가 탑승하게 될 우주선은 Alpha Centauri라는 새로운 인류의 보금자리를 개척하기 위한 대규모 생활 유지..." }, { "title": "[CSS] CSS 정리 - 3", "url": "/posts/studuing_css3/", "categories": "Study, CSS", "tags": "CSS, HTML, FrontEnd", "date": "2020-12-26 22:10:00 +0900", "snippet": "CSS 정리 - 3공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 Inline &amp;amp; Block Box Model Box Sizing Margin Overlap Position Flex Inline &amp;amp; Block&amp;lt;style&amp;gt; h1,a{ border:1px solid red; } h1{ display:inline; } a{ ..." }, { "title": "[CSS] CSS 정리 - 2", "url": "/posts/studuing_css2/", "categories": "Study, CSS", "tags": "CSS, HTML, FrontEnd", "date": "2020-12-26 18:40:00 +0900", "snippet": "CSS 정리 - 2공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 font-size text-align font Inheritance Selecter Cascading font-size&amp;lt;style&amp;gt; #forpx{ font-size:16px; } .forrem{ font-size:1rem; }&amp;lt;/style&amp;gt;...&amp;lt;div id=&quot;f..." }, { "title": "[CSS] CSS 정리 - 1", "url": "/posts/studuing_css/", "categories": "Study, CSS", "tags": "CSS, HTML, FrontEnd", "date": "2020-12-26 15:40:00 +0900", "snippet": "CSS 정리 - 1공부하면서 생소하거나 잘 모르던 내용들을 정리 이 문서에 있는 내용들 선택자 (id,class) 선택자 (부모자식) - 1 선택자 (부모자식) - 2 가상 클래스 선택자 선택자 (id,class)&amp;lt;style&amp;gt; #아이디명{ color:blue; } .클래스명{ color:red; }&amp;lt;/style&amp;gt;...&amp;lt;a id=&quot;아이디명&quot;&amp;g..." }, { "title": "[HTML] HTML 태그들 - 3", "url": "/posts/studuing_html_tag3/", "categories": "Study, HTML", "tags": "HTML, Inflearn, FrontEnd", "date": "2020-12-23 22:20:00 +0900", "snippet": "HTML 태그들 - 3프론트엔드를 공부하면서 햇갈리거나 자주 까먹는 태그들을 정리 이 문서에 있는 태그 목록 abbr &amp;amp; acronym address map, area base abbr acronym&amp;lt;abbr title=&quot;출력할 메시지&quot;&amp;gt; 텍스트 &amp;lt;/abbr&amp;gt;&amp;lt;acronym title=&quot;출력할 메시지&quot;&amp;gt; 텍스트 &amp;lt;/acronym&amp;g..." }, { "title": "[HTML] 검색엔진 최적화", "url": "/posts/studuing_html_searchengine/", "categories": "Study, HTML", "tags": "HTML, Inflearn, FrontEnd", "date": "2020-12-22 22:00:00 +0900", "snippet": " 이 문서에 있는 내용 목록 1. title 태그를 이용하여 페이지의 제목을 나타내기 2. description 메타 태그 활용하기 3. 페이지의 URL 구조 개선하기 4. 사이트 내에서 이동하기 쉽게 만들기 5. 우수한 품질의 콘텐츠와 서비스 제공 6. 보다 나은 앵커 텍스트 작성 7. 이미지 사용의 최적화 8. 제목 태그의 적절한 활용 9. robots.txt를 효과적으로 활용하기 10. rel=”nofollow” 링크 속성 ..." }, { "title": "[HTML] HTML 태그들 - 2", "url": "/posts/studuing_html_tag2/", "categories": "Study, HTML", "tags": "HTML, Inflearn, FrontEnd", "date": "2020-12-22 20:40:00 +0900", "snippet": "HTML 태그들 - 2프론트엔드를 공부하면서 햇갈리거나 자주 까먹는 태그들을 정리 이 문서에 있는 태그 목록 select form input video 이스케이핑 의미론적 태그 Can I use select&amp;lt;form action=&quot;값을 넘길 주소&quot;&amp;gt; &amp;lt;select name=&quot;넘어갈 데이터 이름&quot;&amp;gt; &amp;lt;option value=&quot;..." }, { "title": "[HTML] HTML 태그들 - 1", "url": "/posts/studuing_html_tag/", "categories": "Study, HTML", "tags": "HTML, Inflearn, FrontEnd", "date": "2020-12-21 20:40:00 +0900", "snippet": "HTML 태그들 - 1프론트엔드를 공부하면서 햇갈리거나 자주 까먹는 태그들을 정리 이 문서에 있는 태그 목록 img ul, ol, li iframe table label meta img&amp;lt;img src=&quot;이미지 주소&quot; alt=&quot;대체 텍스트&quot; width=&#39;폭&#39; height=&#39;높이&#39; longdesc=&quot;링크&quot; title=&quot;이미지 설명&quot;&amp;gt; ..." }, { "title": "[Baekjoon][Java] 4673 - 셀프 넘버", "url": "/posts/BOJ_4673/", "categories": "Study, Baekjoon", "tags": "Algorithm, Baekjoon, Java", "date": "2020-12-20 23:00:00 +0900", "snippet": "백준 4673번 - 셀프 넘버문제 링크 : https://www.acmicpc.net/problem/4673문제셀프 넘버는 1949년 인도 수학자 D.R. Kaprekar가 이름 붙였다. 양의 정수 n에 대해서 d(n)을 n과 n의 각 자리수를 더하는 함수라고 정의하자. 예를 들어, d(75) = 75+7+5 = 87이다.양의 정수 n이 주어졌을 때, 이 수를 시작해서 n, d(n), d(d(n)), d(d(d(n))), …과 같은 무한 수열을 만들 수 있다.예를 들어, 33으로 시작한다면 다음 수는 33 + 3 + 3 = 3..." }, { "title": "[Javascript] Javascript 정리 목록", "url": "/posts/javascript_index/", "categories": "Study, Index", "tags": "Javascript, FrontEnd, index", "date": "2020-12-20 15:00:00 +0900", "snippet": "Javascript 정리 목록 Javascript 정리 - 1 정규 표현식 배열 함수 Callback 함수 클로저 Javascript 정리 - 2 Arguments Call &amp;amp; Apply Inheritance &amp;amp; Prototype Standard Built-in Object Javascript 정리 - 3 alert, confirm, prompt Location ..." }, { "title": "[CSS] CSS 정리 목록", "url": "/posts/css_index/", "categories": "Study, Index", "tags": "CSS, FrontEnd, index", "date": "2020-12-20 14:30:00 +0900", "snippet": "CSS 정리 목록 CSS 정리 - 1 선택자 (id,class) 선택자 (부모자식) - 1 선택자 (부모자식) - 2 가상 클래스 선택자 CSS 정리 - 2 font-size text-align font Inheritance Selecter Cascading CSS 정리 - 3 Inline &amp;amp; Block Box Model Box Sizing Margi..." }, { "title": "[HTML] HTML 정리 목록", "url": "/posts/html_index/", "categories": "Study, Index", "tags": "HTML, FrontEnd, index", "date": "2020-12-20 14:00:00 +0900", "snippet": "HTML 정리 목록 HTML 태그들 - 1 img ul, ol, li ifram table label meta HTML 태그들 - 2 select form input video 이스케이핑 의미론적 태그 Can I use HTML 태그들 - 3 abbr &amp;amp; acronym address map, area base ..." }, { "title": "[Baekjoon][Java] 15552 - 빠른 A+B", "url": "/posts/BOJ_15552/", "categories": "Study, Baekjoon", "tags": "Algorithm, Baekjoon, Java", "date": "2020-12-20 12:00:00 +0900", "snippet": "백준 15552번 - 빠른 A+B문제 링크 : https://www.acmicpc.net/problem/15552문제본격적으로 for문 문제를 풀기 전에 주의해야 할 점이 있다. 입출력 방식이 느리면 여러 줄을 입력받거나 출력할 때 시간초과가 날 수 있다는 점이다.C++을 사용하고 있고 cin/cout을 사용하고자 한다면, cin.tie(NULL)과 sync_with_stdio(false)를 둘 다 적용해 주고, endl 대신 개행문자(\\n)를 쓰자. 단, 이렇게 하면 더 이상 scanf/printf/puts/getchar/p..." }, { "title": "[Python] 네이버 카페에 덧글 달아주는 매크로 제작기 - 2", "url": "/posts/studuing_pythonmacro_2/", "categories": "Study, Python", "tags": "Python, toy", "date": "2020-12-18 20:40:00 +0900", "snippet": "- 내가 만들고자 하는 것지정된 페이지에서 지속적으로 새로고침을 하면서 조건에 맞는 글이 올라오면 해당 글에 들어가 빠르게 댓글을 달 수 있는 프로그램을 만들어보자- 제작 과정저번에는 로그인을 하고 지정된 링크의 카페에 진입하는 것 까지 해보았다. 오늘은 ‘일단’ 테스트용 카페에서 잘 구동되도록 기본적인 기능들을 완성해보고자 한다.- 네이버 카페의 프레임 구분우선 네이버 카페의 html 구조에 대해 알아야한다.우선 우리는 게시물의 제목을 이용하여 조건을 따진다고 해보자. 그렇다면 이전처럼 개발자 모드에서 원하는 요소를 클릭해서..." }, { "title": "[Python] 네이버 카페에 덧글 달아주는 매크로 제작기 - 1", "url": "/posts/studuing_pythonmacro/", "categories": "Study, Python", "tags": "Python, toy", "date": "2020-12-17 20:40:00 +0900", "snippet": "- 서문우리가 물건을 사기 위해서는 생산자가 만든 물품을 판매자를 거쳐 구매를 하게 된다는 사실은 대한민국의 의무교육 과정을 거쳤다면 누구든 알 수 있는 사실이다.하지만 수많은 중간 도매상을 거쳐 마트에서 판매되는 것이기 때문에 소비자가 구매하는 실질적인 가격은 생산자가 물건을 도매상에게 판매할 때 보다 높아질 수 밖에 없다.현대 사회에서는 인터넷 거래로 이러한 중간 과정을 해소하여 생산자는 도매상에게 팔 때 보다 높은 가격을 부를 수 있고, 소비자는 일반 소비자 판매가보다 싼 값에 물건을 구매할 수 있다.현명한 소비를 위해서..." }, { "title": "[Python] PyAutoGui로 키보드와 마우스 제어하기", "url": "/posts/studuing_pyautogui/", "categories": "Study, Python", "tags": "Python, Inflearn", "date": "2020-12-17 13:40:00 +0900", "snippet": "PyAutoGui파이썬을 사용하여 키보드와 마우스를 조작할 수 있는 모듈이를 통해 간단한 메크로를 제작할 수 있다○ 설치 방법명령 프롬프트(cmd) 를 열고 다음 코드를 입력한다 :pip install pyautogui이후 cmd 에서 python 을 입력하고 직접 코드를 입력할 수도 있지만파이썬 파일을 만들어 직접 코드들을 실행하는 프로그램을 만들 수도 있다.단, cmd와 파이썬 파일 모두 다음 코드를 입력하거나 작성해두어야 사용이 가능하다import pyautogui○ 사용할 수 있는 함수- 마우스의 현재 위치 알아내기py..." }, { "title": "[Baekjoon][C++] 2588 - 곱셈", "url": "/posts/BOJ_2588/", "categories": "Study, Baekjoon", "tags": "Algorithm, Baekjoon, C++", "date": "2020-12-16 23:00:00 +0900", "snippet": "백준 2588번 - 곱셈문제 링크 : https://www.acmicpc.net/problem/2588문제(세 자리 수) × (세 자리 수)는 다음과 같은 과정을 통하여 이루어진다.(1)과 (2)위치에 들어갈 세 자리 자연수가 주어질 때 (3), (4), (5), (6)위치에 들어갈 값을 구하는 프로그램을 작성하시오.입력첫째 줄에 (1)의 위치에 들어갈 세 자리 자연수가, 둘째 줄에 (2)의 위치에 들어갈 세자리 자연수가 주어진다.출력첫째 줄부터 넷째 줄까지 차례대로 (3), (4), (5), (6)에 들어갈 값을 출력한다.예..." }, { "title": "알고리즘 공부", "url": "/posts/02/", "categories": "Study, Baekjoon", "tags": "life", "date": "2020-12-16 21:00:00 +0900", "snippet": "이 곳에는 온라인 저지에서 푼 문제들을 어떻게 풀었는지 간단하게 포스팅 할 계획이다.지금 내가 할 수 있는 개인 공부는 이 정도..특별한 일정이 있지 않는 한, 매일 최소 1개의 포스팅은 가능하도록 할 것" }, { "title": "학원 상담", "url": "/posts/01/", "categories": "Blogging, daily life", "tags": "life", "date": "2020-12-16 20:50:00 +0900", "snippet": "오늘은 상담을 위해 학원을 찾아갔다.사실 상담을 받을 생각은 없었다. 처음으로 알아본 학원 웹사이트에서 그냥 수강 시간표나 수강료를 알아보고 있었는데, 전화번호를 입력하라길래 아무 생각도 없이 입력했더니 덜컥 전화가 와버렸다.순간 아차, 했지만 뭐 공부 방법을 찾는 일환으로 생각하면 학원도 나쁘지 않을 것 같다는 생각으로 알아본 것 이었고그 당시에는 조금 초조하고 마음이 급해서 무료로 상담을 해준다는 이야기로도 굉장히 감사하게 느꼈던 것 같다.어느 학원이라고는 말할 수 없지만, 집에서 버스와 지하철로 편도 50분정도 걸리는 곳..." }, { "title": "블로그 첫 포스팅", "url": "/posts/01/", "categories": "Blogging, daily life", "tags": "life", "date": "2020-12-15 20:43:00 +0900", "snippet": "블로그를 작성하고 첫 포스팅이다.과거에도 블로그를 운영해 본 적이 있다. 순전히 취미생활에 관련된 내용을 적기 위해서였지만…현재 나는 내년 2월 졸업을 앞둔 대학교 4학년이다.반년 전 까지만 해도 나는 내가 전공으로 먹고 살 수 있을 것 같지 않았다.나보다 프로그래밍을 월등히 잘하는 동기들도 고생하는 이 분야에서 내가 살아남을 수 없을거라 생각했다.나는 전공을 반쯤 포기하고 공기업 준비에 몰두했다.하지만 시간이 지날수록 나는 올바른 선택을 하고있는걸까? 라는 의문에 부딪혔다.프로그래밍은 정말 힘들고 고달픈 작업이지만, 나는 지..." } ]
